<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="dictionary_8cpp" kind="file" language="C++">
    <compoundname>dictionary.cpp</compoundname>
    <includes local="no">bits/stdc++.h</includes>
    <includes local="no">boost/tokenizer.hpp</includes>
    <includes refid="stemming_8cpp" local="yes">stemming.cpp</includes>
    <includedby refid="searcheng_8cpp" local="yes">searcheng.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>bits/stdc++.h</label>
      </node>
      <node id="2">
        <label>boost/tokenizer.hpp</label>
      </node>
      <node id="0">
        <label>dictionary.cpp</label>
        <link refid="dictionary_8cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="8">
        <label>ctype.h</label>
      </node>
      <node id="3">
        <label>stemming.cpp</label>
        <link refid="stemming_8cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>searcheng.cpp</label>
        <link refid="searcheng_8cpp"/>
      </node>
      <node id="9">
        <label>dictionary.cpp</label>
        <link refid="dictionary_8cpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structnode" prot="public">node</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" prot="public" static="no" mutable="no">
        <type>map&lt; string, map&lt; int, int &gt; &gt;</type>
        <definition>map&lt;string,map&lt;int,int&gt; &gt; dict</definition>
        <argsstring></argsstring>
        <name>dict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="5" column="1" bodyfile="dictionary.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1aa0996c94be9cea8b36ad5b45491ffa04" prot="public" static="no" mutable="no">
        <type>map&lt; string, map&lt; int, int &gt; &gt;</type>
        <definition>map&lt;string,map&lt;int,int&gt; &gt; orgdict</definition>
        <argsstring></argsstring>
        <name>orgdict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="6" column="1" bodyfile="dictionary.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1a979d82a104752ab2b08fb304cf3e9fe2" prot="public" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; ans</definition>
        <argsstring></argsstring>
        <name>ans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="7" column="1" bodyfile="dictionary.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int docid</definition>
        <argsstring></argsstring>
        <name>docid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="9" column="1" bodyfile="dictionary.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1a85c25a4eaa3e2e3fd4b4d7137ca51fc3" prot="public" static="no" mutable="no">
        <type>map&lt; string, map&lt; int, int &gt; &gt;::iterator</type>
        <definition>map&lt;string,map&lt;int,int&gt; &gt;::iterator itr</definition>
        <argsstring></argsstring>
        <name>itr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="10" column="1" bodyfile="dictionary.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1abf0dcd0d74ec1efb272ae6883f212667" prot="public" static="no" mutable="no">
        <type>map&lt; string, map&lt; int, int &gt; &gt;::iterator</type>
        <definition>map&lt;string,map&lt;int,int&gt; &gt;::iterator itrr</definition>
        <argsstring></argsstring>
        <name>itrr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="10" column="1" bodyfile="dictionary.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1ab62ad68b1732ef0d399185886945cf96" prot="public" static="no" mutable="no">
        <type>map&lt; int, int &gt;::iterator</type>
        <definition>map&lt;int,int&gt;::iterator itr1</definition>
        <argsstring></argsstring>
        <name>itr1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="11" column="1" bodyfile="dictionary.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1af80b58eff2f128843cb420b10fe56b82" prot="public" static="no" mutable="no">
        <type>map&lt; int, int &gt;::iterator</type>
        <definition>map&lt;int,int&gt;::iterator itr2</definition>
        <argsstring></argsstring>
        <name>itr2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="11" column="1" bodyfile="dictionary.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1aff00d28495a02022481432203029bbe1" prot="public" static="no" mutable="no">
        <type>map&lt; string, int &gt;</type>
        <definition>map&lt;string,int&gt; query_terms</definition>
        <argsstring></argsstring>
        <name>query_terms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="12" column="1" bodyfile="dictionary.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1ac6425beac2b9073e245dc7e1088ca8ef" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double doc_score[9000][20]</definition>
        <argsstring>[9000][20]</argsstring>
        <name>doc_score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="13" column="1" bodyfile="dictionary.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1a90261c48ac72491fc8eb0ecaf38fedad" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double query_score[200]</definition>
        <argsstring>[200]</argsstring>
        <name>query_score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="14" column="1" bodyfile="dictionary.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1aeffd2cecd3d2d33547a68ad5221d193c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int doc_ans[20000]</definition>
        <argsstring>[20000]</argsstring>
        <name>doc_ans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="15" column="1" bodyfile="dictionary.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1ae77dbdc6c0981f6d3d8a4af1b1586fcc" prot="public" static="no" mutable="no">
        <type>pair&lt; double, int &gt;</type>
        <definition>pair&lt;double,int&gt; p[20000]</definition>
        <argsstring>[20000]</argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="16" column="1" bodyfile="dictionary.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1aaf40b01a1e39c61528ec1d7e7e10d35b" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string query_tokens[3000]</definition>
        <argsstring>[3000]</argsstring>
        <name>query_tokens</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="17" column="1" bodyfile="dictionary.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1a5f3ed060f31a8e67afc3a2bbe7111b1f" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string distinct_terms[100000]</definition>
        <argsstring>[100000]</argsstring>
        <name>distinct_terms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="18" column="1" bodyfile="dictionary.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1a1a67417c20ca294bb9bdc7f567055e89" prot="public" static="no" mutable="no">
        <type>pair&lt; int, string &gt;</type>
        <definition>pair&lt;int,string&gt; dist[10][200000]</definition>
        <argsstring>[10][200000]</argsstring>
        <name>dist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="19" column="1" bodyfile="dictionary.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1a245e1b893b727f3a54602e22dc431668" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnode" kindref="compound">node</ref></type>
        <definition>struct node doc[1000000]</definition>
        <argsstring>[1000000]</argsstring>
        <name>doc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="20" column="1" bodyfile="dictionary.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dictionary_8cpp_1a83ff2fe2ecd7287af5b47fd76c075b9f" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnode" kindref="compound">node</ref></type>
        <definition>struct node orgdoc[100000]</definition>
        <argsstring>[100000]</argsstring>
        <name>orgdoc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="20" column="1" bodyfile="dictionary.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dictionary_8cpp_1a856447ae8050c9b4d3c1f946307c54b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void getwords</definition>
        <argsstring>(string line, string words[])</argsstring>
        <name>getwords</name>
        <param>
          <type>string</type>
          <declname>line</declname>
        </param>
        <param>
          <type>string</type>
          <declname>words</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="20" column="1" bodyfile="dictionary.cpp" bodystart="20" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1a5005743b111d21dabde7569642a9b495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int err</definition>
        <argsstring>(string k)</argsstring>
        <name>err</name>
        <param>
          <type>string</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="50" column="1" bodyfile="dictionary.cpp" bodystart="50" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1a9df82f7ca67d016bd9719463d65f4a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int orgerr</definition>
        <argsstring>(string k)</argsstring>
        <name>orgerr</name>
        <param>
          <type>string</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="63" column="1" bodyfile="dictionary.cpp" bodystart="63" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1ab9d1d0ddc7bd56299d7163195e81a3fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int edit_distance</definition>
        <argsstring>(string a, string b)</argsstring>
        <name>edit_distance</name>
        <param>
          <type>string</type>
          <declname>a</declname>
        </param>
        <param>
          <type>string</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="74" column="1" bodyfile="dictionary.cpp" bodystart="74" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1ad727cb6b3ca06b9173bc40df3fc21706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stem_the_input_file</definition>
        <argsstring>()</argsstring>
        <name>stem_the_input_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="90" column="1" bodyfile="dictionary.cpp" bodystart="90" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1a05e1e97e5f543cefa8b19b0b5ac090b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string stem_the_query</definition>
        <argsstring>(string query)</argsstring>
        <name>stem_the_query</name>
        <param>
          <type>string</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="109" column="1" bodyfile="dictionary.cpp" bodystart="109" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1a305f57fd494d8bccd87874a95251b5df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int create_structure_of_original_words</definition>
        <argsstring>()</argsstring>
        <name>create_structure_of_original_words</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="122" column="1" bodyfile="dictionary.cpp" bodystart="122" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1ac264115b0f55b09315e717ed428575b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int create_structure_of_stemmed_words</definition>
        <argsstring>()</argsstring>
        <name>create_structure_of_stemmed_words</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="165" column="1" bodyfile="dictionary.cpp" bodystart="165" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1acf2143f8dd74c98984bb9b683bbde956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_dictionary_stemmed_words</definition>
        <argsstring>()</argsstring>
        <name>make_dictionary_stemmed_words</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="210" column="1" bodyfile="dictionary.cpp" bodystart="210" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1a8f275d2dcbc468ff3af350d9a88a57e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_dictionary_original_words</definition>
        <argsstring>()</argsstring>
        <name>make_dictionary_original_words</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="247" column="1" bodyfile="dictionary.cpp" bodystart="247" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1a6ae3433b8925a45ec6a8a28007047995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_suggestions</definition>
        <argsstring>(string query)</argsstring>
        <name>get_suggestions</name>
        <param>
          <type>string</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="284" column="1" bodyfile="dictionary.cpp" bodystart="284" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1a527d8fd487a52b907fc90f822c90d743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_boolean_retrieval</definition>
        <argsstring>(string query)</argsstring>
        <name>get_boolean_retrieval</name>
        <param>
          <type>string</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="325" column="1" bodyfile="dictionary.cpp" bodystart="325" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="dictionary_8cpp_1a8a0994b8edc637d52d6a5d09e5aeda3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tf_idf_ranking</definition>
        <argsstring>()</argsstring>
        <name>tf_idf_ranking</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dictionary.cpp" line="390" column="1" bodyfile="dictionary.cpp" bodystart="390" bodyend="470"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;bits/stdc++.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;boost/tokenizer.hpp&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Contains<sp/>Boost<sp/>Library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stemming_8cpp" kindref="compound">stemming.cpp</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//Contains<sp/>Stemming<sp/>Code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal">map&lt;string,map&lt;int,int&gt;<sp/>&gt;<sp/><ref refid="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" kindref="member">dict</ref>;<sp/></highlight><highlight class="comment">//For<sp/>creating<sp/>dictionary<sp/>of<sp/>words,<sp/>dict[i][j]<sp/>represents<sp/>count<sp/>of<sp/>ith<sp/>word<sp/>in<sp/>jth<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">map&lt;string,map&lt;int,int&gt;<sp/>&gt;<sp/><ref refid="dictionary_8cpp_1aa0996c94be9cea8b36ad5b45491ffa04" kindref="member">orgdict</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>accessing<sp/>the<sp/>content<sp/>value<sp/>from<sp/>the<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">vector&lt;int&gt;<sp/><ref refid="dictionary_8cpp_1a979d82a104752ab2b08fb304cf3e9fe2" kindref="member">ans</ref><sp/>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">map&lt;string,map&lt;int,int&gt;<sp/>&gt;::iterator<sp/><ref refid="dictionary_8cpp_1a85c25a4eaa3e2e3fd4b4d7137ca51fc3" kindref="member">itr</ref>,<ref refid="dictionary_8cpp_1abf0dcd0d74ec1efb272ae6883f212667" kindref="member">itrr</ref><sp/>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">map&lt;int,int&gt;::iterator<sp/><ref refid="dictionary_8cpp_1ab62ad68b1732ef0d399185886945cf96" kindref="member">itr1</ref>,<ref refid="dictionary_8cpp_1af80b58eff2f128843cb420b10fe56b82" kindref="member">itr2</ref><sp/>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">map&lt;string,int&gt;<sp/><ref refid="dictionary_8cpp_1aff00d28495a02022481432203029bbe1" kindref="member">query_terms</ref><sp/>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1ac6425beac2b9073e245dc7e1088ca8ef" kindref="member">doc_score</ref>[9000][20]<sp/>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a90261c48ac72491fc8eb0ecaf38fedad" kindref="member">query_score</ref>[200]<sp/>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1aeffd2cecd3d2d33547a68ad5221d193c" kindref="member">doc_ans</ref>[20000]<sp/>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">pair&lt;double,int&gt;<ref refid="dictionary_8cpp_1ae77dbdc6c0981f6d3d8a4af1b1586fcc" kindref="member">p</ref>[20000]<sp/>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1aaf40b01a1e39c61528ec1d7e7e10d35b" kindref="member">query_tokens</ref>[3000]<sp/>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a5f3ed060f31a8e67afc3a2bbe7111b1f" kindref="member">distinct_terms</ref>[100000]<sp/>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>pair&lt;int,string&gt;<ref refid="dictionary_8cpp_1a1a67417c20ca294bb9bdc7f567055e89" kindref="member">dist</ref>[10][200000]<sp/>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a856447ae8050c9b4d3c1f946307c54b9" kindref="member">getwords</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>line,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>words[])<sp/><sp/><sp/></highlight><highlight class="comment">//Comma<sp/>seperated<sp/>values<sp/>represent<sp/>diff.<sp/>fields<sp/>of<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(line[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(line[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s+=line[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words[idx++]<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/><sp/>=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structnode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnode" kindref="compound">node</ref><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//A<sp/>structure<sp/>for<sp/>different<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>title;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>author;<sp/><sp/></highlight><highlight class="comment">//<sp/>relevant<sp/>attribute<sp/>of<sp/>document<sp/>stored<sp/>in<sp/>the<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>date;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>content;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>link;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnode" kindref="compound">node</ref><sp/>doc[1000000];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnode" kindref="compound">node</ref><sp/>orgdoc[100000];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a5005743b111d21dabde7569642a9b495" kindref="member">err</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>k)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>func.<sp/>to<sp/>take<sp/>only<sp/>those<sp/>rows<sp/>in<sp/>the<sp/>dataset<sp/>where<sp/>the<sp/>data<sp/><sp/>matches<sp/>the<sp/>datatype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>s+=k[0];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>s+=k[1];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>s+=k[2];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;jan&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;feb&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;mar&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;apr&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;jun&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;jul&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;aug&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;sep&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;oct&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;nov&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;dec&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a9df82f7ca67d016bd9719463d65f4a66" kindref="member">orgerr</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>k)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>s+=k[0];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>s+=k[1];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>s+=k[2];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Jan&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;Feb&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;Mar&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;Apr&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;Jun&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;Jul&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;Aug&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;Sep&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;Oct&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;Nov&quot;</highlight><highlight class="normal">||s==</highlight><highlight class="stringliteral">&quot;Dec&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1ab9d1d0ddc7bd56299d7163195e81a3fd" kindref="member">edit_distance</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>b){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>a.size();<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>b.size()<sp/>;<sp/><sp/></highlight><highlight class="comment">//function<sp/>for<sp/>calculating<sp/>edit<sp/>distance<sp/>for<sp/>suggestions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dp[x+1][y+1]<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;=x;i++){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;=y;j++){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==0){dp[i][j]=j<sp/>;}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j==0){dp[i][j]=i<sp/>;}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a[i-1]==b[j-1]){dp[i][j]=dp[i-1][j-1];}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dp[i][j]=1+min(dp[i-1][j],min(dp[i][j-1],dp[i-1][j-1]))<sp/>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dp[x][y];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//returns<sp/>edit<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1ad727cb6b3ca06b9173bc40df3fc21706" kindref="member">stem_the_input_file</ref>()<sp/></highlight><highlight class="comment">//<sp/>function<sp/>for<sp/>stemming<sp/>the<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstemmer" kindref="compound">stemmer</ref><sp/>*<sp/>z<sp/>=<sp/><ref refid="stemming_8cpp_1aaf7655b3d00411800055563fdefcf43e" kindref="member">create_stemmer</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>stemming<sp/>the<sp/>data<sp/>set<sp/>by<sp/>linking<sp/>the<sp/>header<sp/>file<sp/>from<sp/>stemming<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc(i_max<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*<sp/>f<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;data.txt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>==<sp/>0)<sp/>{<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;stemming<sp/>file<sp/>not<sp/>found&quot;</highlight><highlight class="normal">&lt;&lt;endl;}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stemming_8cpp_1ace84d1929c729aba783d284e05952f7f" kindref="member">stemfile</ref>(z,<sp/>f);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><ref refid="stemming_8cpp_1a23018baae747f0d163da2a2b7fe91ac1" kindref="member">free_stemmer</ref>(z);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">fclose(f);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a05e1e97e5f543cefa8b19b0b5ac090b3" kindref="member">stem_the_query</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>query)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstemmer" kindref="compound">stemmer</ref><sp/>*<sp/>z<sp/>=<sp/><ref refid="stemming_8cpp_1aaf7655b3d00411800055563fdefcf43e" kindref="member">create_stemmer</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc(i_max<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>query=<ref refid="stemming_8cpp_1a554aac5597c2ca775a8e32704d65199d" kindref="member">stemstring</ref>(z,query);<sp/></highlight><highlight class="comment">//Stemming<sp/>the<sp/>query<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><ref refid="stemming_8cpp_1a23018baae747f0d163da2a2b7fe91ac1" kindref="member">free_stemmer</ref>(z);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>query;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a305f57fd494d8bccd87874a95251b5df" kindref="member">create_structure_of_original_words</ref>()</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>myfile2(</highlight><highlight class="stringliteral">&quot;data.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!myfile2.is_open())</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>getline<sp/>(myfile2,line)<sp/>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>word[20];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1a856447ae8050c9b4d3c1f946307c54b9" kindref="member">getwords</ref>(line,word);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>relevant<sp/>attributes<sp/>of<sp/>the<sp/>dataset<sp/>in<sp/>the<sp/>structure<sp/>use<sp/>for<sp/>tokenising</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dictionary_8cpp_1a9df82f7ca67d016bd9719463d65f4a66" kindref="member">orgerr</ref>(word[1]))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orgdoc[<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>].<ref refid="structnode_1a79b31177c413f7066ba1e0e9dc203c05" kindref="member">title</ref><sp/>=<sp/>word[0];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orgdoc[<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>].<ref refid="structnode_1a9e241352faba467dce6ee6a3f32979a1" kindref="member">date</ref><sp/>=<sp/>word[1];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orgdoc[<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>].<ref refid="structnode_1a17fe4a03b75213946eda4002d36d45c1" kindref="member">author</ref><sp/>=<sp/>word[2];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orgdoc[<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>].<ref refid="structnode_1a3ce953da0e17204565cb4599ca6a584e" kindref="member">link</ref><sp/>=<sp/>word[10];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orgdoc[<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>].<ref refid="structnode_1aef41938c1d67b81199e8f0625f51025a" kindref="member">content</ref><sp/>=<sp/>word[4];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>++;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout&lt;&lt;docid&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myfile2.close();</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1ac264115b0f55b09315e717ed428575b8" kindref="member">create_structure_of_stemmed_words</ref>()<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>for<sp/>creating<sp/>structure<sp/>of<sp/>the<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>ifstream<sp/>myfile<sp/>(</highlight><highlight class="stringliteral">&quot;nmn.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myfile.is_open())</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>getline<sp/>(myfile,line)<sp/>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>word[20];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1a856447ae8050c9b4d3c1f946307c54b9" kindref="member">getwords</ref>(line,word);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dictionary_8cpp_1a5005743b111d21dabde7569642a9b495" kindref="member">err</ref>(word[1]))</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc[<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>].<ref refid="structnode_1a79b31177c413f7066ba1e0e9dc203c05" kindref="member">title</ref><sp/>=<sp/>word[0];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc[<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>].<ref refid="structnode_1a9e241352faba467dce6ee6a3f32979a1" kindref="member">date</ref><sp/>=<sp/>word[1];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc[<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>].<ref refid="structnode_1a17fe4a03b75213946eda4002d36d45c1" kindref="member">author</ref><sp/>=<sp/>word[2];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc[<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>].<ref refid="structnode_1a3ce953da0e17204565cb4599ca6a584e" kindref="member">link</ref><sp/>=<sp/>word[10];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc[<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>].<ref refid="structnode_1aef41938c1d67b81199e8f0625f51025a" kindref="member">content</ref><sp/>=<sp/>word[4];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>++;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>myfile.close();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="dictionary_8cpp_1acf2143f8dd74c98984bb9b683bbde956" kindref="member">make_dictionary_stemmed_words</ref>()<sp/><sp/></highlight><highlight class="comment">//<sp/>fuction<sp/>for<sp/>dictionary<sp/>construction<sp/>of<sp/>stemmed<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::tokenizer&lt;boost::char_separator&lt;char&gt;<sp/>&gt;<sp/>tokenizer<sp/>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>boost::char_separator&lt;char&gt;<sp/>sep{</highlight><highlight class="stringliteral">&quot;<sp/>+-\?;:.[!\&quot;]&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i&lt;<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>;i++)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::string<sp/>s<sp/>=<sp/>&quot;Boost<sp/>C++<sp/>Libraries&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer<sp/>tok{doc[i].<ref refid="structnode_1a79b31177c413f7066ba1e0e9dc203c05" kindref="member">title</ref>,<sp/>sep};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;t<sp/>:<sp/>tok)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" kindref="member">dict</ref>[t][i]++;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>tokenizer<sp/>tok1{doc[i].<ref refid="structnode_1a17fe4a03b75213946eda4002d36d45c1" kindref="member">author</ref>,<sp/>sep};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;t<sp/>:<sp/>tok1)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" kindref="member">dict</ref>[t][i]++;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer<sp/>tok2{doc[i].<ref refid="structnode_1aef41938c1d67b81199e8f0625f51025a" kindref="member">content</ref>,<sp/>sep};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;t<sp/>:<sp/>tok2)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(i<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cout&lt;&lt;t&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" kindref="member">dict</ref>[t][i]++;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer<sp/>tok3{doc[i].<ref refid="structnode_1a9e241352faba467dce6ee6a3f32979a1" kindref="member">date</ref>,<sp/>sep};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;t<sp/>:<sp/>tok3)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cout&lt;&lt;t&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" kindref="member">dict</ref>[t][i]++;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a8f275d2dcbc468ff3af350d9a88a57e0" kindref="member">make_dictionary_original_words</ref>()<sp/></highlight><highlight class="comment">//function<sp/>for<sp/>dictionary<sp/>construction<sp/>for<sp/>original<sp/>unstemmed<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::tokenizer&lt;boost::char_separator&lt;char&gt;<sp/>&gt;<sp/>tokenizer<sp/>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>boost::char_separator&lt;char&gt;<sp/>sep{</highlight><highlight class="stringliteral">&quot;<sp/>+-?;\:.[!\&quot;]&quot;</highlight><highlight class="normal">};<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//separators<sp/>used<sp/>for<sp/>dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i&lt;<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>;i++)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::string<sp/>s<sp/>=<sp/>&quot;Boost<sp/>C++<sp/>Libraries&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer<sp/>tok{orgdoc[i].<ref refid="structnode_1a79b31177c413f7066ba1e0e9dc203c05" kindref="member">title</ref>,<sp/>sep};<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//tokenising<sp/>original<sp/>doc<sp/>title</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;t<sp/>:<sp/>tok)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1aa0996c94be9cea8b36ad5b45491ffa04" kindref="member">orgdict</ref>[t][i]++;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>tokenizer<sp/>tok1{orgdoc[i].<ref refid="structnode_1a17fe4a03b75213946eda4002d36d45c1" kindref="member">author</ref>,<sp/>sep};<sp/><sp/><sp/></highlight><highlight class="comment">//tokenising<sp/>original<sp/>doc<sp/>author</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;t<sp/>:<sp/>tok1)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1aa0996c94be9cea8b36ad5b45491ffa04" kindref="member">orgdict</ref>[t][i]++;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer<sp/>tok2{orgdoc[i].<ref refid="structnode_1aef41938c1d67b81199e8f0625f51025a" kindref="member">content</ref>,<sp/>sep};<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tokenising<sp/>original<sp/>doc<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;t<sp/>:<sp/>tok2)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(i<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cout&lt;&lt;t&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1aa0996c94be9cea8b36ad5b45491ffa04" kindref="member">orgdict</ref>[t][i]++;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer<sp/>tok3{orgdoc[i].<ref refid="structnode_1a9e241352faba467dce6ee6a3f32979a1" kindref="member">date</ref>,<sp/>sep};<sp/><sp/><sp/></highlight><highlight class="comment">//tokenising<sp/>original<sp/>doc<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;t<sp/>:<sp/>tok3)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cout&lt;&lt;t&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1aa0996c94be9cea8b36ad5b45491ffa04" kindref="member">orgdict</ref>[t][i]++;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a6ae3433b8925a45ec6a8a28007047995" kindref="member">get_suggestions</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>query)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>for<sp/>suggestions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::tokenizer&lt;boost::char_separator&lt;char&gt;<sp/>&gt;<sp/>tokenizer<sp/>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::char_separator&lt;char&gt;<sp/>sep2{</highlight><highlight class="stringliteral">&quot;<sp/>+-?;:.[\&quot;]/&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;!&amp;|&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer<sp/>tok{query,<sp/>sep2};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>edit<sp/>distance<sp/>part<sp/>SUGGESTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;t<sp/>:<sp/>tok)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t!=</highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">&amp;&amp;t!=</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">&amp;&amp;t!=</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">){<sp/><ref refid="dictionary_8cpp_1aaf40b01a1e39c61528ec1d7e7e10d35b" kindref="member">query_tokens</ref>[i]=t<sp/>;i++;<sp/>}}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>query_size<sp/>=<sp/>i<sp/>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="dictionary_8cpp_1a85c25a4eaa3e2e3fd4b4d7137ca51fc3" kindref="member">itr</ref><sp/>=<sp/><ref refid="dictionary_8cpp_1aa0996c94be9cea8b36ad5b45491ffa04" kindref="member">orgdict</ref>.begin()<sp/>;<sp/><ref refid="dictionary_8cpp_1abf0dcd0d74ec1efb272ae6883f212667" kindref="member">itrr</ref><sp/>=<sp/><ref refid="dictionary_8cpp_1aa0996c94be9cea8b36ad5b45491ffa04" kindref="member">orgdict</ref>.end()<sp/>;<sp/>i<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="dictionary_8cpp_1a85c25a4eaa3e2e3fd4b4d7137ca51fc3" kindref="member">itr</ref>!=<ref refid="dictionary_8cpp_1abf0dcd0d74ec1efb272ae6883f212667" kindref="member">itrr</ref>){</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>h<sp/>=<sp/><ref refid="dictionary_8cpp_1a85c25a4eaa3e2e3fd4b4d7137ca51fc3" kindref="member">itr</ref>-&gt;first<sp/>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(h!=</highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">&amp;&amp;h!=</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">&amp;&amp;h!=</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">){<ref refid="dictionary_8cpp_1a5f3ed060f31a8e67afc3a2bbe7111b1f" kindref="member">distinct_terms</ref>[i]=<sp/>h<sp/>;<sp/>i++;}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1a85c25a4eaa3e2e3fd4b4d7137ca51fc3" kindref="member">itr</ref>++;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dict_size<sp/>=<sp/>i<sp/>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;query_size;i++){</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>=0;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>&lt;dict_size;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>++){</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1a1a67417c20ca294bb9bdc7f567055e89" kindref="member">dist</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>].first<sp/>=<sp/><ref refid="dictionary_8cpp_1ab9d1d0ddc7bd56299d7163195e81a3fd" kindref="member">edit_distance</ref>(<ref refid="dictionary_8cpp_1a5f3ed060f31a8e67afc3a2bbe7111b1f" kindref="member">distinct_terms</ref>[<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>],<ref refid="dictionary_8cpp_1aaf40b01a1e39c61528ec1d7e7e10d35b" kindref="member">query_tokens</ref>[i])<sp/>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1a1a67417c20ca294bb9bdc7f567055e89" kindref="member">dist</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>].second<sp/>=<sp/><ref refid="dictionary_8cpp_1a5f3ed060f31a8e67afc3a2bbe7111b1f" kindref="member">distinct_terms</ref>[<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>]<sp/>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(<ref refid="dictionary_8cpp_1a1a67417c20ca294bb9bdc7f567055e89" kindref="member">dist</ref>[i],<ref refid="dictionary_8cpp_1a1a67417c20ca294bb9bdc7f567055e89" kindref="member">dist</ref>[i]+dict_size)<sp/>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;do<sp/>you<sp/>mean<sp/>this?????\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">i=dict_size-1<sp/>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>=0;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>&lt;5;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>++){<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;query_size;i++){</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/><sp/>&lt;&lt;<sp/><ref refid="dictionary_8cpp_1a1a67417c20ca294bb9bdc7f567055e89" kindref="member">dist</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>].second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a527d8fd487a52b907fc90f822c90d743" kindref="member">get_boolean_retrieval</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>query)<sp/></highlight><highlight class="comment">//<sp/>function<sp/>for<sp/>boolean<sp/>retrieval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::tokenizer&lt;boost::char_separator&lt;char&gt;<sp/>&gt;<sp/>tokenizer<sp/>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::char_separator&lt;char&gt;<sp/>sep2{</highlight><highlight class="stringliteral">&quot;<sp/>+*-?\;:.[\&quot;]/&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;!&amp;|&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>tokenizer<sp/>tok4{query,<sp/>sep2};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0<sp/>;<sp/></highlight><highlight class="comment">//<sp/>x<sp/>=<sp/>terms<sp/>in<sp/>query<sp/>except<sp/>for<sp/>!<sp/>|<sp/>&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1aeffd2cecd3d2d33547a68ad5221d193c" kindref="member">doc_ans</ref>[20000]<sp/>;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>docs<sp/>=<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;i&lt;=docs;i++){doc_ans[i]=0;}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>0<sp/>;<sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>OR<sp/>---<sp/>1<sp/>=<sp/>AND<sp/>----2<sp/>=<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;seg&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;t<sp/>:<sp/>tok4)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t==</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">||t==</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">||t==</highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t==</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">){flag=0;<sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t==</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">){flag=1;}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t==</highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">){flag=2;}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1aff00d28495a02022481432203029bbe1" kindref="member">query_terms</ref>[t]++<sp/>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a85c25a4eaa3e2e3fd4b4d7137ca51fc3" kindref="member">itr</ref>=<ref refid="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" kindref="member">dict</ref>.find(t)<sp/>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dictionary_8cpp_1a85c25a4eaa3e2e3fd4b4d7137ca51fc3" kindref="member">itr</ref><sp/>!=<sp/><ref refid="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" kindref="member">dict</ref>.end())</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/>{<ref refid="dictionary_8cpp_1ab62ad68b1732ef0d399185886945cf96" kindref="member">itr1</ref>=(<ref refid="dictionary_8cpp_1a85c25a4eaa3e2e3fd4b4d7137ca51fc3" kindref="member">itr</ref>-&gt;second).begin()<sp/>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="dictionary_8cpp_1af80b58eff2f128843cb420b10fe56b82" kindref="member">itr2</ref>=(<ref refid="dictionary_8cpp_1a85c25a4eaa3e2e3fd4b4d7137ca51fc3" kindref="member">itr</ref>-&gt;second).end()<sp/>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="dictionary_8cpp_1ab62ad68b1732ef0d399185886945cf96" kindref="member">itr1</ref>!=<ref refid="dictionary_8cpp_1af80b58eff2f128843cb420b10fe56b82" kindref="member">itr2</ref>){</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/><ref refid="dictionary_8cpp_1ab62ad68b1732ef0d399185886945cf96" kindref="member">itr1</ref>-&gt;first<sp/>;<sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;&quot;here<sp/>&quot;<sp/>&lt;&lt;<sp/><sp/>y<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flag==0){<sp/>doc_ans[y]=1;}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flag==1){</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc_ans[y]==1){doc_ans[y]=2<sp/>;}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flag==2){<sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc_ans[y]==1){doc_ans[y]=0<sp/>;}<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1ab62ad68b1732ef0d399185886945cf96" kindref="member">itr1</ref>++<sp/>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flag==1){</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;i&lt;=docs;i++){</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc_ans[i]==2){doc_ans[i]=1<sp/>;}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{doc_ans[i]=0<sp/>;}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="370"><highlight class="normal">flag=0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*--------------------------------------Boolean<sp/>Query<sp/>Completes<sp/>here--------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;i&lt;=docs;i++){</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc_ans[i]==1){<ref refid="dictionary_8cpp_1a979d82a104752ab2b08fb304cf3e9fe2" kindref="member">ans</ref>.push_back(i);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;i&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;no.<sp/>of<sp/>docs<sp/>satisfying<sp/>boolean<sp/>query<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="dictionary_8cpp_1a979d82a104752ab2b08fb304cf3e9fe2" kindref="member">ans</ref>.size()&lt;&lt;endl&lt;&lt;endl<sp/>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dictionary_8cpp_1a8a0994b8edc637d52d6a5d09e5aeda3b" kindref="member">tf_idf_ranking</ref>()<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>for<sp/>tdf<sp/>idf<sp/>for<sp/>ranking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dictionary_8cpp_1a979d82a104752ab2b08fb304cf3e9fe2" kindref="member">ans</ref>.size()&gt;0){</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Now<sp/>ranking<sp/>them<sp/>using<sp/>vector<sp/>space<sp/>model.&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distinct_queries<sp/>=<sp/><ref refid="dictionary_8cpp_1aff00d28495a02022481432203029bbe1" kindref="member">query_terms</ref>.size()<sp/>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ans_docs<sp/>=<sp/><ref refid="dictionary_8cpp_1a979d82a104752ab2b08fb304cf3e9fe2" kindref="member">ans</ref>.size()<sp/>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">map&lt;string,int&gt;::iterator<sp/>itr3,itr4<sp/>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">itr3=<ref refid="dictionary_8cpp_1aff00d28495a02022481432203029bbe1" kindref="member">query_terms</ref>.begin()<sp/>;<sp/>itr4=<ref refid="dictionary_8cpp_1aff00d28495a02022481432203029bbe1" kindref="member">query_terms</ref>.end()<sp/>;<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref><sp/>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TF*IDF<sp/>OF<sp/>QUERY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(itr3!=itr4){</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>max(1,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((<ref refid="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" kindref="member">dict</ref>.find(itr3-&gt;first)-&gt;second).size()))<sp/>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;&quot;value<sp/>of<sp/>x<sp/>is&quot;&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1a90261c48ac72491fc8eb0ecaf38fedad" kindref="member">query_score</ref>[i]<sp/>=<sp/>(double)(1.0+log10(itr3-&gt;second))*(log10((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="dictionary_8cpp_1ad95bf3fc4f49547745530b4d7dc9712a" kindref="member">docid</ref>/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>itr3++<sp/>;i++;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;query_score[0]<sp/>is<sp/>&quot;<sp/>&lt;&lt;<sp/>query_score[0]<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calculating<sp/>document<sp/>score<sp/>for<sp/>each<sp/>doc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ans_docs;i++){</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>itr3=<ref refid="dictionary_8cpp_1aff00d28495a02022481432203029bbe1" kindref="member">query_terms</ref>.begin()<sp/>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>=0;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>&lt;distinct_queries;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>++){</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1ab62ad68b1732ef0d399185886945cf96" kindref="member">itr1</ref><sp/>=<sp/>((<ref refid="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" kindref="member">dict</ref>.find(itr3-&gt;first)-&gt;second).find(<ref refid="dictionary_8cpp_1a979d82a104752ab2b08fb304cf3e9fe2" kindref="member">ans</ref>[i]))<sp/>;<sp/><ref refid="dictionary_8cpp_1af80b58eff2f128843cb420b10fe56b82" kindref="member">itr2</ref><sp/>=(<ref refid="dictionary_8cpp_1a7faeb828b73155aea22f80f04e31c431" kindref="member">dict</ref>.find(itr3-&gt;first)-&gt;second).end()<sp/>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dictionary_8cpp_1ab62ad68b1732ef0d399185886945cf96" kindref="member">itr1</ref>!=<ref refid="dictionary_8cpp_1af80b58eff2f128843cb420b10fe56b82" kindref="member">itr2</ref>){<sp/>x<sp/>=<sp/>(int)(<ref refid="dictionary_8cpp_1ab62ad68b1732ef0d399185886945cf96" kindref="member">itr1</ref>-&gt;second)<sp/>;}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{x<sp/>=<sp/>0<sp/>;}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x!=0)<sp/>{<ref refid="dictionary_8cpp_1ac6425beac2b9073e245dc7e1088ca8ef" kindref="member">doc_score</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>]<sp/>=<sp/>1.0+<sp/>(double)log10((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x)<sp/>;}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/><ref refid="dictionary_8cpp_1ac6425beac2b9073e245dc7e1088ca8ef" kindref="member">doc_score</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>]=0.0;}<sp/></highlight><highlight class="comment">//CHECK<sp/>WHETHER<sp/>1.0<sp/>OR<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr3++<sp/>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//NORMALIZATION<sp/>OF<sp/>QUERY<sp/>VECTOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dd<sp/>=<sp/><sp/>0.0<sp/>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;distinct_queries;i++){</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>dd+=<sp/>(double)<sp/>1.0*(<ref refid="dictionary_8cpp_1a90261c48ac72491fc8eb0ecaf38fedad" kindref="member">query_score</ref>[i]*<ref refid="dictionary_8cpp_1a90261c48ac72491fc8eb0ecaf38fedad" kindref="member">query_score</ref>[i])<sp/>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal">dd<sp/>=<sp/>1.0*sqrt(dd)<sp/>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;distinct_queries;i++){</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dd!=0)<sp/>{<ref refid="dictionary_8cpp_1a90261c48ac72491fc8eb0ecaf38fedad" kindref="member">query_score</ref>[i]<sp/>=<sp/>1.0*((double)(<ref refid="dictionary_8cpp_1a90261c48ac72491fc8eb0ecaf38fedad" kindref="member">query_score</ref>[i])/(double)dd)<sp/>;}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<ref refid="dictionary_8cpp_1a90261c48ac72491fc8eb0ecaf38fedad" kindref="member">query_score</ref>[i]<sp/>=<sp/>0.0<sp/>;}</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;query_score[0]<sp/>is<sp/>&quot;<sp/>&lt;&lt;<sp/>query_score[0]<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//NORMALIZATION<sp/>OF<sp/>ALL<sp/>DOCUMENT<sp/>VECTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ans_docs;i++){</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>dd<sp/>=<sp/>0.0<sp/>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>=0;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>&lt;distinct_queries;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>++){</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dd<sp/>+=<sp/>(double)1.0*(<ref refid="dictionary_8cpp_1ac6425beac2b9073e245dc7e1088ca8ef" kindref="member">doc_score</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>]*<ref refid="dictionary_8cpp_1ac6425beac2b9073e245dc7e1088ca8ef" kindref="member">doc_score</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>])<sp/>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>dd<sp/>=<sp/>(double)1.0*sqrt(dd)<sp/>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>=0;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>&lt;distinct_queries;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>++){</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dd!=0){<ref refid="dictionary_8cpp_1ac6425beac2b9073e245dc7e1088ca8ef" kindref="member">doc_score</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>]=<sp/>1.0*((double)(<ref refid="dictionary_8cpp_1ac6425beac2b9073e245dc7e1088ca8ef" kindref="member">doc_score</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>])/(double)dd)<sp/>;}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<ref refid="dictionary_8cpp_1ac6425beac2b9073e245dc7e1088ca8ef" kindref="member">doc_score</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>]<sp/>=<sp/>0<sp/>;}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sorting<sp/>of<sp/>(scores<sp/>and<sp/>doc<sp/>no.s)<sp/>in<sp/>pair<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ans_docs;i++){</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>dd<sp/>=<sp/>0.0<sp/>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>=0;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>&lt;distinct_queries;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>++){</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dd<sp/>+=<sp/>(double)1.0*(<ref refid="dictionary_8cpp_1a90261c48ac72491fc8eb0ecaf38fedad" kindref="member">query_score</ref>[<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>]*<ref refid="dictionary_8cpp_1ac6425beac2b9073e245dc7e1088ca8ef" kindref="member">doc_score</ref>[i][<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>])<sp/>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1ae77dbdc6c0981f6d3d8a4af1b1586fcc" kindref="member">p</ref>[i].second=<ref refid="dictionary_8cpp_1a979d82a104752ab2b08fb304cf3e9fe2" kindref="member">ans</ref>[i]<sp/>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dictionary_8cpp_1ae77dbdc6c0981f6d3d8a4af1b1586fcc" kindref="member">p</ref>[i].first=dd<sp/>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dictionary_8cpp_1ae77dbdc6c0981f6d3d8a4af1b1586fcc" kindref="member">p</ref>[i].second==0){cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;score<sp/>of<sp/>0th<sp/>doc<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="dictionary_8cpp_1ae77dbdc6c0981f6d3d8a4af1b1586fcc" kindref="member">p</ref>[i].first<sp/>&lt;&lt;<sp/>endl;}</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">sort(<ref refid="dictionary_8cpp_1ae77dbdc6c0981f6d3d8a4af1b1586fcc" kindref="member">p</ref>,<ref refid="dictionary_8cpp_1ae77dbdc6c0981f6d3d8a4af1b1586fcc" kindref="member">p</ref>+ans_docs);</highlight></codeline>
<codeline lineno="462"><highlight class="normal">i<sp/>=<sp/>ans_docs-1;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;top<sp/>20<sp/>docs<sp/>satisfying<sp/>query\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>=0;<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>&lt;min(20,ans_docs);<ref refid="structstemmer_1a024d42a47e06bd5207e2494cbfefbf2f" kindref="member">j</ref>++){</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;doc<sp/>no.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="dictionary_8cpp_1ae77dbdc6c0981f6d3d8a4af1b1586fcc" kindref="member">p</ref>[i].second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>score<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="dictionary_8cpp_1ae77dbdc6c0981f6d3d8a4af1b1586fcc" kindref="member">p</ref>[i].first<sp/>&lt;&lt;<sp/>endl<sp/>;<sp/>i--<sp/>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dictionary.cpp"/>
  </compounddef>
</doxygen>
